/*!
 * Hesabe Apple Pay v1.0.0
 * Apple Pay integration library for Hesabe payment gateway
 * (c) 2025 Salman Ulfaris
 * Released under the MIT License.
 */
!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?module.exports=t():"function"==typeof define&&define.amd?define(t):(e="undefined"!=typeof globalThis?globalThis:e||self).HesabeApplePay=t()}(this,function(){"use strict";class e{static PAYMENT_TYPES={MPGS_APPLE_PAY:9,CYBERSOURCE_APPLE_PAY:10,KNET_DEBIT:11,KNET_CREDIT:12,KNET_INTERNATIONAL_APPLE_PAY:13,AMEX_APPLE_PAY:14};static APPLE_PAYMENT_METHOD_IDS=[e.PAYMENT_TYPES.MPGS_APPLE_PAY,e.PAYMENT_TYPES.CYBERSOURCE_APPLE_PAY,e.PAYMENT_TYPES.KNET_DEBIT,e.PAYMENT_TYPES.KNET_CREDIT,e.PAYMENT_TYPES.KNET_INTERNATIONAL_APPLE_PAY,e.PAYMENT_TYPES.AMEX_APPLE_PAY];static AP_DEFAULT_CARD={merchantCapabilities:["supports3DS"],supportedNetworks:["visa","masterCard"]};#e;#t;constructor(e={}){this.#e=this.#n(e),this.#t={routes:{appleValidation:this.#a()+"/transaction/apple",payment:this.#a()+"/payment"},token:this.#e.token},this.#i()}#n(e){const t={env:"sandbox",debug:!1,currencyCode:"KWD",countryCode:"KW",amount:"",token:"",requestData:"",availablePaymentGateways:[],elements:{applePayButtonContainerId:"applePayment",applePayButtonQuerySelector:".applePayBtn"},...e};return t.merchantIdentifier="production"===t.env?"merchant.hesabe.prod":"merchant.hesabe.dec",t.sessionId=t.sessionId||this.#o(),t}#a(){return"production"===this.#e.env?"https://api.hesabe.com":"https://dev-paymentapi.hesabe.com"}#o(){return`${Date.now()}${Math.random().toString(36).substr(2,9)}`}#i(){const e={token:"Token is required",requestData:"Request data is required",amount:"Amount is required",availablePaymentGateways:"Available payment gateways are required",env:"Environment is required"};for(const[t,n]of Object.entries(e))if(!this.#e[t]||Array.isArray(this.#e[t])&&0===this.#e[t].length)throw new Error(`[HesabeApplePay] ${n}`)}#s(){this.#r().then(()=>{"loading"===document.readyState?document.addEventListener("DOMContentLoaded",()=>this.#l()):this.#l()})}#r(){return new Promise(e=>{if(window.ApplePaySession)return void e();const t=document.querySelector('script[src*="apple-pay-sdk.js"]');if(t)return void(t.onload=e);const n=document.createElement("script");n.src="https://applepay.cdn-apple.com/jsapi/1.latest/apple-pay-sdk.js",n.onload=e,n.onerror=()=>{this.#p("Failed to load Apple Pay SDK"),e()},(document.head||document.body||document.documentElement).appendChild(n)})}#l(){window.ApplePaySession?this.#c()?this.#d():this.#p("Apple Pay not supported or not enabled for merchant"):this.#p("ApplePaySession not available in this browser")}#c(){return window.ApplePaySession&&this.#e.merchantIdentifier&&e.APPLE_PAYMENT_METHOD_IDS.some(e=>this.#e.availablePaymentGateways.includes(e))}async#d(){try{const e=await ApplePaySession.canMakePaymentsWithActiveCard(this.#e.merchantIdentifier);if(console.log(e),!e)return void this.#p("Apple Pay available in browser, but merchant not activated for domain");this.#y(),this.#p("Apple Pay initialized successfully")}catch(e){this.#p("Apple Pay initialization failed:",e)}}#h(t){const n={countryCode:this.#e.countryCode,currencyCode:this.#e.currencyCode,total:{label:this.#e.merchantCode||"Payment",type:"final",amount:this.#e.amount}};return Object.keys(e.AP_DEFAULT_CARD).forEach(t=>{n[t]=e.AP_DEFAULT_CARD[t]}),11===t&&(n.merchantCapabilities=["supports3DS","supportsDebit"]),12===t&&(n.merchantCapabilities=["supports3DS","supportsCredit"]),11!==t&&12!==t||(n.supportedCountries=["KW"]),n}async#P(e){const t=this.#h(e),n=new ApplePaySession(5,t);n.onvalidatemerchant=async t=>{this.#p("Validating merchant...");try{const a=this.#u(t.validationURL,e),i=await fetch(a);if(!i.ok)throw new Error(`Validation failed: ${i.status}`);const o=await i.json();n.completeMerchantValidation(o)}catch(e){this.#p("Merchant validation failed:",e),n.abort()}},n.onpaymentauthorized=t=>{this.#p("Payment authorized",t.payment),this.#A(t.payment,e,n)},n.oncancel=e=>{this.#p("Apple Pay cancelled",e)},n.begin()}#y(){const e=document.getElementById(this.#e.elements.applePayButtonContainerId);e?(e.style.display="block",document.querySelectorAll(this.#e.elements.applePayButtonQuerySelector).forEach(e=>{const t=parseInt(e.dataset.paymenttype),n=t&&this.#e.availablePaymentGateways.includes(t);e.style.display=n?"inline-block":"none",e.onclick=e=>{e.preventDefault(),n?this.#P(t):this.#p("Apple Pay button not enabled for this merchant")}})):this.#p("Apple Pay button container not found")}#u(e,t){const n=new URLSearchParams({u:e,token:this.#t.token,serviceId:3,payId:t});return`${this.#t.routes.appleValidation}?${n.toString()}`}#A(e,t,n){try{const a=new URLSearchParams({token:this.#t.token,paymentType:t,data:this.#e.requestData,applePaymentToken:JSON.stringify(e.token.paymentData),paymentMethod:JSON.stringify(e.token.paymentMethod),session_id:this.#e.sessionId,transactionIdentifier:(e.token.transactionIdentifier||"").toLowerCase()}),i=`${this.#t.routes.payment}?${a.toString()}`;n.completePayment(ApplePaySession.STATUS_SUCCESS),location.href=i}catch(e){this.#p("Payment processing failed:",e),n.completePayment(ApplePaySession.STATUS_FAILURE)}}#p(...e){this.#e.debug&&console.log("[HesabeApplePay]",...e)}init(){return this.#s(),this}}return"undefined"!=typeof window&&(window.HesabeApplePay=e),e});
